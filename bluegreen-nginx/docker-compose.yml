version: "3.8"

services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      # The sample Node app reads RELEASE_ID and PORT (optional) to render headers and bind.
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=80
    expose:
      - "80"
    ports:
      - "8081:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/healthz || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 3

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=80
    expose:
      - "80"
    ports:
      - "8082:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/healthz || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 3

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx_lb
    depends_on:
      - app_blue
      - app_green
    ports:
      - "${PORT}:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./render-and-run.sh:/docker-entrypoint.d/99-render-and-run.sh:ro
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
    # default command stays; our script in /docker-entrypoint.d runs before nginx starts
