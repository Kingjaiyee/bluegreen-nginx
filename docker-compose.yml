version: "3.8"

services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=80
    expose:
      - "80"
    ports:
      - "8081:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/healthz || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 3

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=80
    expose:
      - "80"
    ports:
      - "8082:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/healthz || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 3

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx_lb
    depends_on:
      - app_blue
      - app_green
    ports:
      - "${PORT}:80"
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
    volumes:
      - ./nginx.conf.template:/etc/nginx/user-templates/nginx.conf.template:ro
      - ./render-and-run.sh:/docker-entrypoint.d/99-render-and-run.sh:ro
      - nginx_logs:/var/log/nginx   # <— shared logs volume (nginx writes)

  alert_watcher:
    image: python:3.11-slim
    container_name: alert_watcher
    depends_on:
      - nginx
    working_dir: /app
    command: /bin/sh -lc "pip install --no-cache-dir -r requirements.txt && python watcher.py"
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD}
      - WINDOW_SIZE=${WINDOW_SIZE}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE}
    volumes:
      - nginx_logs:/var/log/nginx:ro   # <— watcher reads logs
      - ./watcher.py:/app/watcher.py:ro
      - ./requirements.txt:/app/requirements.txt:ro

volumes:
  nginx_logs:
